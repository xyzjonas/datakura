// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { WarehouseApiRoutesAuthLoginUserData, WarehouseApiRoutesAuthLoginUserErrors, WarehouseApiRoutesAuthLoginUserResponses, WarehouseApiRoutesAuthLogoutUserData, WarehouseApiRoutesAuthLogoutUserResponses, WarehouseApiRoutesAuthWhoamiData, WarehouseApiRoutesAuthWhoamiErrors, WarehouseApiRoutesAuthWhoamiResponses, WarehouseApiRoutesWarehouseGetWarehouseLocationData, WarehouseApiRoutesWarehouseGetWarehouseLocationResponses, WarehouseApiRoutesWarehouseGetWarehousesData, WarehouseApiRoutesWarehouseGetWarehousesResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Login User
 */
export const warehouseApiRoutesAuthLoginUser = <ThrowOnError extends boolean = false>(options: Options<WarehouseApiRoutesAuthLoginUserData, ThrowOnError>) => {
    return (options.client ?? client).post<WarehouseApiRoutesAuthLoginUserResponses, WarehouseApiRoutesAuthLoginUserErrors, ThrowOnError>({
        url: '/api/v1/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Logout User
 */
export const warehouseApiRoutesAuthLogoutUser = <ThrowOnError extends boolean = false>(options?: Options<WarehouseApiRoutesAuthLogoutUserData, ThrowOnError>) => {
    return (options?.client ?? client).post<WarehouseApiRoutesAuthLogoutUserResponses, unknown, ThrowOnError>({
        url: '/api/v1/auth/logout',
        ...options
    });
};

/**
 * Whoami
 */
export const warehouseApiRoutesAuthWhoami = <ThrowOnError extends boolean = false>(options?: Options<WarehouseApiRoutesAuthWhoamiData, ThrowOnError>) => {
    return (options?.client ?? client).get<WarehouseApiRoutesAuthWhoamiResponses, WarehouseApiRoutesAuthWhoamiErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/auth/whoami',
        ...options
    });
};

/**
 * Get Warehouses
 */
export const warehouseApiRoutesWarehouseGetWarehouses = <ThrowOnError extends boolean = false>(options?: Options<WarehouseApiRoutesWarehouseGetWarehousesData, ThrowOnError>) => {
    return (options?.client ?? client).get<WarehouseApiRoutesWarehouseGetWarehousesResponses, unknown, ThrowOnError>({
        url: '/api/v1/warehouses',
        ...options
    });
};

/**
 * Get Warehouse Location
 */
export const warehouseApiRoutesWarehouseGetWarehouseLocation = <ThrowOnError extends boolean = false>(options: Options<WarehouseApiRoutesWarehouseGetWarehouseLocationData, ThrowOnError>) => {
    return (options.client ?? client).get<WarehouseApiRoutesWarehouseGetWarehouseLocationResponses, unknown, ThrowOnError>({
        url: '/api/v1/locations/{warehouse_location_code}',
        ...options
    });
};
